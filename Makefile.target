# This is the Makefile for using the DINO toolchain to build an app.
# Include it from a bld/dino directory in your app (built with 'maker').

include $(MAKER_ROOT)/Makefile.env

DINO_MODE ?= auto

ifeq ($(DINO_MODE),manual)
LOCAL_CFLAGS += -DDINO_MODE_MANUAL
else ifeq ($(DINO_MODE),semiauto)
LOCAL_CFLAGS += -DDINO_MODE_MANUAL
else ifeq ($(DINO_MODE),auto)
LOCAL_CFLAGS += -DDINO_MODE_AUTO
else
$(error Unrecognized DINO mode: $(DINO_MODE))
endif

# Part of DINO's target makefile responsibility is to configure
# Mementos. Mementos configuration is not exposed to target.

MEMENTOS_MODE = manual
include $(MEMENTOS_ROOT)/Makefile.flags

LOCAL_CFLAGS += -DDINO

DINO_LIB = $(DINO_ROOT)/LLVM/bld/lib/DINO.so

# TODO: move to external call to OPT:
#OPT_MODULE_FLAGS = $(OPT_COMMON_FLAGS)
#OPT_PROGRAM_FLAGS = $(DINO_LIB)
#OPT_MODULES =
#OPT_FLAGS=-debug -stats

# ... until then, invoke the passes directly in the clang invocation
# TODO: until DINO supports versioning arrays (and pointers), we don't
# use DINO compiler passes, but immitate them manually using macros.
#override CFLAGS += -Xclang -load -Xclang $(DINO_LIB)

override DEPS += \
	libdino \
	libmementos \

DEP_ROOT_libdino = $(DINO_ROOT)/DinoRuntime
DEP_ROOT_libmementos = $(MEMENTOS_ROOT)

override CLFAGS += $(LOCAL_CFLAGS)

include $(MAKER_ROOT)/Makefile.clang
